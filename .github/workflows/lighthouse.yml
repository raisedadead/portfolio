name: Lighthouse
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout source files
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: true

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@latest
          lhci autorun --upload.target=temporary-public-storage || echo "LHCI failed!"
