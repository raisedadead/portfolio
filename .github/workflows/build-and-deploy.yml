name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    uses: raisedadead/portfolio/.github/workflows/lint.yml@main

  test:
    name: Test
    uses: raisedadead/portfolio/.github/workflows/test.yml@main

  # This job is a quick sanity check to ensure that the build is working.
  # This can be expanded to include e2e testing later.
  build:
    name: Build (Normal)
    runs-on: ubuntu-latest
    needs: [test] # Dont need to depend on lint because it is already in turbo:build pipeline
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next
            ${{ github.workspace }}/.turbo
            ${{ github.workspace }}/.vercel
            ${{ github.workspace }}/.vercel
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build (Normal)
        run: |
          pnpm turbo:build

      # - name: Tar Files
      #   run: tar -cf build.tar .next

      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
      #   with:
      #     name: build
      #     path: build.tar

  build-for-edge:
    name: Build (for Edge)
    runs-on: ubuntu-latest
    needs: [test] # Dont need to depend on lint because it is already in turbo:build pipeline
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next
            ${{ github.workspace }}/.turbo
            ${{ github.workspace }}/.vercel
            ${{ github.workspace }}/.vercel
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build (for Cloudflare Pages)
        run: |
          pnpm turbo:build:for-edge

      - name: Tar Files
        run: tar -cf build-for-edge.tar .vercel/output/static

      - name: Upload build artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: build-for-edge
          path: build-for-edge.tar

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-for-edge]

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Download Artifact from build
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: build-for-edge

      - name: Extract Artifact
        run: |
          tar -xf build-for-edge.tar
          rm build-for-edge.tar

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@61eafe73baad0195ab582cb447b2c6e15a0df9ce # v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: mrugesh
          directory: .vercel/output/static
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      issue-number: ${{ github.event.pull_request.number }}
      url: ${{ steps.deploy.outputs.url }}
      alias: ${{ steps.deploy.outputs.alias }}
      environment: ${{ steps.deploy.outputs.environment }}
      deployment_id: ${{ steps.deploy.outputs.id }}

  comment:
    if: ${{ github.event_name == 'pull_request' }}
    uses: raisedadead/portfolio/.github/workflows/comment.yml@main
    needs: [deploy]
    with:
      issue-number: ${{ github.event.pull_request.number }}
      url: ${{ needs.deploy.outputs.url }}
      alias: ${{ needs.deploy.outputs.alias }}
      environment: ${{ needs.deploy.outputs.environment }}
      deployment_id: ${{ needs.deploy.outputs.deployment_id }}
