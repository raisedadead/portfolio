name: Build Check

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    uses: raisedadead/portfolio/.github/workflows/lint.yml@main

  test:
    name: Test
    uses: raisedadead/portfolio/.github/workflows/test.yml@main

  # This job is a quick sanity check to ensure that the build is working.
  # This can be expanded to include e2e testing later.
  build:
    name: Build (Normal)
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      CI: true

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next
            ${{ github.workspace }}/.turbo
            ${{ github.workspace }}/.vercel
            ${{ github.workspace }}/.vercel
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build (Normal)
        run: |
          pnpm build

  build-for-edge:
    name: Build (for Edge)
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next
            ${{ github.workspace }}/.turbo
            ${{ github.workspace }}/.vercel
            ${{ github.workspace }}/.vercel
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build (for Cloudflare Pages)
        run: |
          pnpm build:for-edge

      - name: Tar Files
        run: tar -cf build-for-edge.tar .vercel/output/static

      - name: Upload build artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: build-for-edge
          path: build-for-edge.tar
